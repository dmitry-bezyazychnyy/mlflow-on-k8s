---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio-deployment
  template:
    metadata:
      labels:
        app: minio-deployment
    spec:
      containers:
      - name: minio-deployment
        image: minio/minio:RELEASE.2020-11-25T22-36-25Z-arm64
        imagePullPolicy: Always
        command:
        - "/bin/sh"
        - "-ce"
        - "/usr/bin/docker-entrypoint.sh minio server --address \"0.0.0.0:9000\" /data"
        env:
        - name: MINIO_ACCESS_KEY
          value: minio123
        - name: MINIO_SECRET_KEY
          value: minio123
        ports:
        - name: http
          containerPort: 9000
          protocol: TCP
        resources:
          requests:
            memory: "0.3Gi"
            cpu: "100m"
        volumeMounts:
        - name: minio-pvc
          mountPath: /data          
  volumeClaimTemplates:
  - metadata:
      name: minio-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1024Mi
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio
spec:
  type: NodePort
  ports:
    - port: 8081
      targetPort: 9000
      protocol: TCP
      name: http
  selector:
    app: minio-deployment
---
# apiVersion: networking.k8s.io/v1beta1 # for k3s < v1.19
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-service
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
  namespace: minio
spec:
  rules:
  - host: minio-service.minio
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 8081